plugins {
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}


apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'project-report'
apply plugin: 'eclipse'

mainClassName = 'com.cepheid.cloud.skel.SkelApplication'
group = 'com.cepheid.cloud.skel'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


repositories {
    mavenCentral()
}
configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencyManagement {
    dependencies {
        dependency 'io.swagger:swagger-jersey2-jaxrs:1.5.3'
        imports {
            mavenBom 'org.springframework.boot:spring-boot-starter-parent:2.1.8.RELEASE'
        }
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'io.swagger:swagger-jersey2-jaxrs'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jersey'
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.3'

    annotationProcessor 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3'
    annotationProcessor 'org.glassfish.jaxb:jaxb-runtime:2.3.3'
    annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'



    runtime 'com.h2database:h2'
    //runtime 'mysql:mysql-connector-java'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testImplementation "org.mockito:mockito-junit-jupiter"
}
